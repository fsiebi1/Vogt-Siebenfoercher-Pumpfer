<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aboutUs" xml:space="preserve">
    <value>Über uns</value>
  </data>
  <data name="adv" xml:space="preserve">
    <value>Vorteile</value>
  </data>
  <data name="dia" xml:space="preserve">
    <value>Nachteile</value>
  </data>
  <data name="index.h1" xml:space="preserve">
    <value>Programmiersprachen</value>
  </data>
  <data name="index.java.adv" xml:space="preserve">
    <value>plattormunabhängig, starker Community-Support</value>
  </data>
  <data name="index.java.disadv" xml:space="preserve">
    <value>erheblich unperformanter als andere Programmiersprachen</value>
  </data>
  <data name="index.lang" xml:space="preserve">
    <value>Sprache</value>
  </data>
  <data name="index.net.adv" xml:space="preserve">
    <value>plattformübergreifend, viele Bibliotheken bereitgestellt</value>
  </data>
  <data name="index.net.disadv" xml:space="preserve">
    <value>Lücke zwischen Release und Stabilität</value>
  </data>
  <data name="index.object" xml:space="preserve">
    <value>Objektorientiert</value>
  </data>
  <data name="index.py.adv" xml:space="preserve">
    <value>benutzerfreundlich, unkompliziert und schnell</value>
  </data>
  <data name="index.py.disadv" xml:space="preserve">
    <value>Designeinschränkungen</value>
  </data>
  <data name="index.yes" xml:space="preserve">
    <value>Ja</value>
  </data>
  <data name="java.ad1" xml:space="preserve">
    <value>Aufgrund von vorinstallierten Java-Tools, wird der Java-Quellcode vom Java-Compiler zuerst in einen Byte-Code übersetzt und erst dann von der Java Virtual Machine (JVM) interpretiert und als Maschinencode ausgeührt</value>
  </data>
  <data name="java.ad1h" xml:space="preserve">
    <value>Plattformunabhängigkeit:</value>
  </data>
  <data name="java.ad2" xml:space="preserve">
    <value>Jedoch ist dieser Vorteil auch zugleich ein riesiger Nachteil, denn durch diese Plattformunabhängigkeit entsteht ein erheblicher Performance- und Geschwindigkeitsverlust</value>
  </data>
  <data name="java.ad3" xml:space="preserve">
    <value>Java erhält regelmäßig Updates, welche Aktualität, Stabilität und Flexibilität gewährleisten. Zusätzlich hat Java eine gigantische Auswahl an Bibliotheken und Frameworks, welche teilweise von der großen Community Javas erstellt und zur Verfügung gestellt wurden.</value>
  </data>
  <data name="java.ad3h" xml:space="preserve">
    <value>Starker Community-Support:</value>
  </data>
  <data name="java.ad4" xml:space="preserve">
    <value>Da Java einen sehr strikten typischen Porgrammierstil fordert, kann es dazu führen, dass der geschriebene Code länger werden kann las bei anderen Programmiersprachen und dadurch auch mehr Speicherplatz benötigt wird.</value>
  </data>
  <data name="java.ad4h" xml:space="preserve">
    <value>Programmcodelänge:</value>
  </data>
  <data name="java.p1" xml:space="preserve">
    <value>Java ist eine besondere Programmiersprache, die sich an der Syntax der Programmiersprachen C und C++ anlehnt. Bei der Entwicklung von Java wurde von Beginn an genauestens darauf geachtet, dass bestimmte schwere Programmierfehler erst gar nicht auftreten können.</value>
  </data>
  <data name="java.p2" xml:space="preserve">
    <value>So gibt es in Java keine Pointer und somit kann der Programmierer nicht aus Versehen auf die falsche Speicheradresse zugreifen.</value>
  </data>
  <data name="java.p3" xml:space="preserve">
    <value>Unter den Programmierern wird Java als eine einfach zu erlernenden, objektorientierte, sichere und von der Rechnerarchitektur unabhängige Programmiersprache sehr geschätzt. In den letzten Jahren ist es den Entwicklern von Java gelungen die Programmiersprache immer leistungsfähiger zu machen.</value>
  </data>
  <data name="java.p4" xml:space="preserve">
    <value>Java ist eine sehr durchdachte und leichtgewichtige Programmiersprache, die aus gutem Grund auf bestimmte Funktionen von C++ verzichtet, wie beispielsweise Pointer, Mehrfachvererbung und Header-Dateien.</value>
  </data>
  <data name="java.p5" xml:space="preserve">
    <value>Stattdessen wurden viele anspruchsvolle Funktionen, wie Ausnahmenbehandlung, Nebenläufigkeit und grafische Benutzeroberfläche, in die Programmiersprache Java integriert.</value>
  </data>
  <data name="java.p6" xml:space="preserve">
    <value>In Java sind alle Eigenschaften moderner objektorientierter Programmiersprachen enthalten.</value>
  </data>
  <data name="net.ad1" xml:space="preserve">
    <value>.NET basiert auf einer objektorientierten Programmiersprache. Objektorientiertes Programmieren ist eines der besten Dinge zum Nutzen des .NET Frameworks. Im .NET Framework ist das Objekt in kleinere Blöcke unterteilt. Dies erleichtert Entwicklern die Arbeit an jeweils einem Block. Dadurch können sie Aufgaben effektiv ausführen.</value>
  </data>
  <data name="net.ad1h" xml:space="preserve">
    <value>Objektorientiertes Softwareentwicklungsmodell:</value>
  </data>
  <data name="net.ad2" xml:space="preserve">
    <value>Aktualisierungen sind sehr häufig und werden für alle Produkte des Technologiebereichs benötigt. Das Problem tritt auf, wenn bei Updates die vorherige Version nicht angezeigt wird. Wenn einige Änderungen an der Datenbank und am Design vorgenommen werden, wird die ursprüngliche Version nicht unterstützt und funktioniert nur in neuen Versionen.</value>
  </data>
  <data name="net.ad2h" xml:space="preserve">
    <value>Eingeschränkter objektrelationaler Support:</value>
  </data>
  <data name="net.ad3" xml:space="preserve">
    <value>.NET verfügt über hervorragende Entwicklungswerkzeuge. Diese äußerst nützlichen Tools erleichtern die Bereitstellung und Wartung. Es ist einfach, den Fehler zu beheben. Es bietet die Flexibilität, Anwendungen zu zerlegen, das Problem zu beheben und zusammenzustellen.</value>
  </data>
  <data name="net.ad3h" xml:space="preserve">
    <value>Flexible Bereitstellung und einfache Wartung:</value>
  </data>
  <data name="net.ad4" xml:space="preserve">
    <value>Das .NET Framework ist nicht dafür bekannt, neuen Support und Updates bereitzustellen. Wenn Aktualisierungen vorgenommen werden, fehlt hier die Unterstützung. Einige Nutzer beschreiben, dass daher oftmals bei Release Dokumente enthalten sid, welche in einer Beta-Version funktionierten aber in der veröffentlichte nVersion Fehler aufweisen.</value>
  </data>
  <data name="net.ad4h" xml:space="preserve">
    <value>Lücke zwischen Release und Stabilität:</value>
  </data>
  <data name="net.p1" xml:space="preserve">
    <value>Beim .NET Framework handelt es sich um eine Software-Plattform und Laufzeit­umgebung, mit eigenen Klassenbibliotheken, Schnittstellen und Dienst­pro­grammen, die unterschiedliche Programmiersprachen unterstützt.</value>
  </data>
  <data name="net.p2" xml:space="preserve">
    <value>Bei der Laufzeitumgebung CLR (Common Language Runtime) handelt es sich um ein Modul für die sprachübergreifende Verwaltung von Code.</value>
  </data>
  <data name="net.p3" xml:space="preserve">
    <value>Unter sprachübergreifend ist in diesem Zusammenhang zu verstehen, dass das NET Framework nicht nur für eine Hochsprache ausgelegt wurde, sondern das Programmiersprachen wie C++, C#, J# oder Visual Basic für die Programmierung von Anwendungen verwendet werden können, die vor dem Kompilieren zuerst in eine gemeinsame Zwischensprache CIL (Common Intermediate Language) übersetzt werden.</value>
  </data>
  <data name="net.p4" xml:space="preserve">
    <value>Bei der .NET-Programmierung von Anwendungen mit der Programmiersprache C++ und der Laufzeitumgebung CLR kommt hinzu, dass Microsoft in einer abgeleiteten Variante von C++ den Sprachumfang dieser Programmiersprache erweiterte, unter anderen um den Zugriff auf .NET Bibliothek zu ermöglichen.</value>
  </data>
  <data name="py.ad1" xml:space="preserve">
    <value>Experten und Anfänger können den Code leicht verstehen und Sie können mit dieser Sprache schnell produktiv werden, da sie weniger Dialekte als andere beliebte Sprachen wie Perl enthält. Da sein Quellcode dem Pseudocode ähnelt, ist es auch einfach zu erlernen. Sobald Sie mit dem Lernen beginnen, können Sie praktisch sofort mit dem Codieren beginnen.</value>
  </data>
  <data name="py.ad1h" xml:space="preserve">
    <value>Benutzerfreundlichkeit:</value>
  </data>
  <data name="py.ad2" xml:space="preserve">
    <value>Sogar die größten Fans von Python würden bestimmten Designeinschränkungen in der Sprache zustimmen, da es dynamisch geschrieben wird. Dies erfordert mehr Tests und Fehler, um nur während der Laufzeit aufzutauchen. Die globale Interpretersperre der Sprache bedeutet, dass immer nur ein Thread auf Python-Interna zugreifen kann.</value>
  </data>
  <data name="py.ad2h" xml:space="preserve">
    <value>Desingeinschränkungen:</value>
  </data>
  <data name="py.ad3" xml:space="preserve">
    <value>Die Python-Community bietet Anwendern eine schnelle und effektive Unterstützung. Hunderttausende Entwickler arbeiten hart daran, Fehler zu finden und zu beheben und neue Patches und Verbesserungen für die Sprache zu entwickeln. Das bietet auch schnelles Feedback in vielerlei Hinsicht. Zum einen können Programmierer verschiedene Aufgaben überspringen, die in anderen Sprachen ausgeführt werden müssten.</value>
  </data>
  <data name="py.ad3h" xml:space="preserve">
    <value>Unkompliziert und schnell:</value>
  </data>
  <data name="py.ad4" xml:space="preserve">
    <value>Python ist auf Desktop- und Serverplattformen stark, auf mobilen Plattformen jedoch schwach. Es gab nur eine Handvoll Smartphone-Apps, die mit Python entwickelt wurden, und die Sprache ist auf der Clientseite von Webentwicklungsanwendungen selten zu finden. Die Sprache ist auch in Webentwicklungsbrowsern nicht vorhanden. Dies liegt daran, dass immer noch eine gute sichere Sandboxsprache dafür fehlt.</value>
  </data>
  <data name="py.ad4h" xml:space="preserve">
    <value>Mangel an mobilen Computern und Browsern:</value>
  </data>
  <data name="py.c" xml:space="preserve">
    <value>Code kopieren</value>
  </data>
  <data name="py.p1" xml:space="preserve">
    <value>Python ist eine Programmiersprache, die dank ihrer klaren Syntax und einfachen Lesbarkeit leicht zu erlernen ist und sich sehr vielseitig einsetzen lässt. Für die gängigen Betriebssysteme ist Python frei verfügbar. Die üblichen Programmierparadigmen wie die objektorientierte oder funktionale Programmierung werden unterstützt.</value>
  </data>
  <data name="py.p2" xml:space="preserve">
    <value>Bei Python handelt es sich um eine Programmiersprache mit einer klaren Syntax und guten Lesbarkeit. Sie gilt als leicht zu erlernen und ist in den gängigen Betriebssystemen interpretierbar. Python unterstützt mehrere Paradigmen der Programmierung wie die funktionale, objektorientierte oder aspektorientierte Programmierung und ist auch als Skriptsprache nutzbar.</value>
  </data>
  <data name="py.p3" xml:space="preserve">
    <value>Grundsätzlich ist für Python keine Entwicklungsumgebung notwendig, da Pythoncode nicht kompiliert werden muss und Skripte sich mit beliebigen Texteditoren schreiben lassen. Interpreter sind interaktiv und erlauben mit den Möglichkeiten der Sprache zu experimentieren. Gängige von Programmierern genutzte Editoren wie Emacs oder Vim sind für Python anpassbar.</value>
  </data>
  <data name="py.p4" xml:space="preserve">
    <value>Oft ist gemeinsam mit Python IDLE installiert. IDLE besteht aus einer Shell, einer Textumgebung und Debuggingfunktionen, stellt aber keine vollwertige Entwicklungsumgebung (IDE – Integrated Development Environment) dar.</value>
  </data>
  <data name="py.r" xml:space="preserve">
    <value>Code ausführen</value>
  </data>
</root>